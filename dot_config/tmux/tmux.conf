# better terminal/tmux colors?
set-option -g default-terminal 'screen-256color'

# Show list of keybindings
bind-key '?' list-keys

# splits
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \\ split-window -h  -c '#{pane_current_path}'
# bind-key $ command-prompt -I #S "rename-session '%%'"

# create new windows in the current path
bind c new-window -c '#{pane_current_path}'

# choose tree sessions, windows or panes in a tree like structure
bind-key j choose-tree

# show/hide status bar
bind s set-option -g status
bind C-s set-option -g status

# remove confirm step when killing a window or pane
bind-key & kill-window
bind-key x kill-pane

# Pane resizing (1 or 2 cursor cells per bump, Shift + Left / Right / Up / Down)
# -n means that no prefix is necessary for these bindings
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
# bind -n C-Left resize-pane -L 10
# bind -n C-Right resize-pane -R 10
# bind -n C-Down resize-pane -D 5
# bind -n C-Up resize-pane -U 5

# navigate panes in vim style (Ctrl + h / j / k / l)
# disabled for now since this conflicts with clearing terminal command (Ctrl + l)
# bind-key -n C-h select-pane -L
# bind-key -n C-j select-pane -D
# bind-key -n C-k select-pane -U
# bind-key -n C-l select-pane -R

# break current pane in a new window
bind-key b break-pane -d

# loud or quiet? (https://github.com/hamvocke/dotfiles/blob/master/tmux/.tmux.conf)
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
setw -g monitor-activity off
set-option -g bell-action none

# Start windows and pane numbering with index 1 instead of 0
set-option -g base-index 1
set-window-option -g pane-base-index 1

# re-number windows when one is closed
set-option -g renumber-windows on

# don't rename windows automatically
set-option -g allow-rename off

# increase display time to 1000 ms
set-option -g display-time 1000

# windows will update their name based on the current path
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# word separators for automatic word selection
setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

# Copy mode highlight
# tmux_set mode-style "bg=$TC,fg=$FG"
set-option -g mode-style bg=red,fg=white,bold

# Set title
# set-option -g set-titles on
# set-option -g set-titles-string "#T"
# set-window-option -g allow-rename off
# Mouse mode on
# set-option -g mouse on

########################################################
# Tmux variables (https://github.com/tmux-plugins/tpm) #
########################################################
# For a more complete list view: https://linux.die.net/man/3/strftime
# $(echo $USER) - shows the current username
# %a --> Day of week (Mon)
# %A --> Day of week Expanded (Monday)
# %b --> Month (Jan)
# %d --> Day (31)
# %Y --> Year (2017)
# %D --> Month/Day/Year (12/31/2017)
# %v --> Day-Month-Year (31-Dec-2017)
# %r --> Hour:Min:Sec AM/PM (12:30:27 PM)
# %T --> 24 Hour:Min:Sec (16:30:27)
# %X --> Hour:Min:Sec (12:30:27)
# %R --> 24 Hour:Min (16:30)
# %H --> 24 Hour (16)
# %l --> Hour (12)
# %M --> Mins (30)
# %S --> Seconds (09)
# %p --> AM/PM (AM)

#colour0 (black)
#colour1 (red)
#colour2 (green)
#colour3 (yellow)
#colour4 (blue)
#colour7 (white)
#colour5 colour6 colour7 colour8 colour9 colour10 colour11 colour12 colour13 colour14 colour15 colour16 colour17

#D (pane id)
#F (window flags)
#H (hostname)
#h (hostname short)
#I (window index)
#P (pane index)
#S (session index)
#T (pane title)
#W (window name)

######## Alacritty + Tmux key integration #########
# First of all, Alacritty can send hex codes for shortcuts you define. So for
# example you can send a hex code for the shortcut "c-f v" which in my case
# opens a vertical pane (see setting above). The hex code for this combination
# is: 0x06 0x76. There are many cases to find it out. One of them is the tool
# 'xxd'

# If you run "xxd -psd" and hit "c-f v" and then enter and finally c-c to exit
# , it outputs the following:
#
# 	$ xxd -psd
# 	^Fv
# 	06760a^C
#
# What matters is the sequence  06760a^C where:
#
# 	06 -> c-f
# 	76 -> v
# 	0a -> return
#	^C -> c-c
#
# From here, we know that 0x06 0x76 corresponds to "c-f v".
#
# Next step is to add a line to 'key_binding' setting in Alacritty:
#
#   - { key: D,        mods: Command,       chars: "\x06\x76"  }
#
# That's it! The followings are the ones that I'm using:
#
#   key_bindings:
#     - { key: D,        mods: Command,       chars: "\x06\x76" }
#     - { key: D,        mods: Command|Shift, chars: "\x06\x73" }
#     - { key: W,        mods: Command,       chars: "\x06\x78" }
#     - { key: H,        mods: Command,       chars: "\x06\x68" }
#     - { key: J,        mods: Command,       chars: "\x06\x6a" }
#     - { key: K,        mods: Command,       chars: "\x06\x6b" }
#     - { key: L,        mods: Command,       chars: "\x06\x6c" }
#     - { key: T,        mods: Command,       chars: "\x06\x63" }
#     - { key: Key1,     mods: Command,       chars: "\x06\x31" }
#     - { key: Key2,     mods: Command,       chars: "\x06\x32" }
#     - { key: Key3,     mods: Command,       chars: "\x06\x33" }
#     - { key: Key4,     mods: Command,       chars: "\x06\x34" }
#     - { key: Key5,     mods: Command,       chars: "\x06\x35" }
#     - { key: Key6,     mods: Command,       chars: "\x06\x36" }
#     - { key: Key7,     mods: Command,       chars: "\x06\x37" }
#     - { key: Key8,     mods: Command,       chars: "\x06\x38" }
#     - { key: Key9,     mods: Command,       chars: "\x06\x39" }
#     - { key: Left,     mods: Command,       chars: "\x06\x48" }
#     - { key: Down,     mods: Command,       chars: "\x06\x4a" }
#     - { key: Up,       mods: Command,       chars: "\x06\x4b" }
#     - { key: Right,    mods: Command,       chars: "\x06\x4c" }
#
# Finally, inside the iTerm2 Key settings, I'm adding just various shortcuts,
# such as cmd-j, cmd-left, etc.. , select the option "send hex code" and the
# enter the hex code which I want to be executed, hence the tmux sequence. So
# when I press CMD + d in iterm, I send the sequence 0x06 0x76,
# which tmux inteprets it as opening a new pane.
###############################################


# #####################################################
# # tmux simple status line with solarized dark theme #
# #####################################################
# source-file ~/.config/tmux/tmux-solarized-dark.conf


# ###########################################
# # https://github.com/erikw/tmux-powerline #
# ###########################################
# source-file ~/.config/tmux/tmux-powerline.conf

# set-option -g status-bg default
# set-option -g status-fg colour240

#############################################################
# Tmux Plugin Manager (https://github.com/tmux-plugins/tpm) #
#############################################################
# source-file ~/.config/tmux/tpm.conf

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# custom status bar plugin
set -g @plugin 'bboydflo/snap-the-power'
# set -g @snap_the_power_session_icon '‚ùê'
set -g @snap_the_power_time_format '%T'
set -g @snap_the_power_date_format '%b %d, %Y'

# speed up refresh rate to 1 second
set-option -g status-interval 1

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
